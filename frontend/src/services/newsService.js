import supabase from \'../config/supabaseClient\';\n\nconst getNews = async (params) => {\n  let query = \`/api/news?\`;\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      query += `${key}=${params[key]}&`;\n    }\n  }\n  query = query.slice(0, -1); // Remove trailing &\n\n  const { data, error } = await supabase.auth.getSession()\n\n  if (error) {\n      console.log(\"error\", error)\n  }\n\n  const { access_token } = data.session\n\n  const response = await fetch(query, {\n    headers: {\n        Authorization: `Bearer ${access_token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n};\n\nconst upvoteArticle = async (id) => {\n  const { data, error } = await supabase.auth.getSession()\n\n  if (error) {\n      console.log(\"error\", error)\n  }\n\n  const { access_token } = data.session\n\n  const response = await fetch(`/api/news/upvote/${id}`, {\n    method: \'POST\',\n    headers: {\n      \'Content-Type\': \'application/json\',\n      Authorization: `Bearer ${access_token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n};\n\nconst readLaterArticle = async (id) => {\n  const { data, error } = await supabase.auth.getSession()\n\n  if (error) {\n      console.log(\"error\", error)\n  }\n\n  const { access_token } = data.session\n  const response = await fetch(`/api/news/readlater/${id}`, {\n    method: \'POST\',\n    headers: {\n      \'Content-Type\': \'application/json\',\n      Authorization: `Bearer ${access_token}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n};\n\nconst searchArticles = async (query) => {\n  const response = await fetch(`/api/news/search?query=${query}`);\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n};\n\nexport default {\n  getNews,\n  upvoteArticle,\n  readLaterArticle,\n  searchArticles,\n};